# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: fast-zk-rollup-ci

on: [pull_request]

jobs:
  run_integration_tests:
    runs-on: ubuntu-latest
    env:
      LOCAL_HADOOP_IMAGE_NAME: ycryptx/mina:hadoop
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 18.12
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: docker/setup-buildx-action@v1
      - name: Docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored in GitHub Secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored in GitHub Secrets
      - uses: docker/build-push-action@v2
        with:
          context: accumulator/infra/hadoop-single-node-cluster
          tags: ${{ env.LOCAL_HADOOP_IMAGE_NAME }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
      - name: Spin up local accumulator
        run: LOCAL_HADOOP_IMAGE_NAME=${{ env.LOCAL_HADOOP_IMAGE_NAME }} && make up-local-accumulator
      - name: Sleep for 10 seconds
        run: sleep 10s
        shell: bash
      - name: add test config
        working-directory: ./sequencer
        run: cp .env.example .env
      - name: run integration tests
        working-directory: ./sequencer
        run: yarn && yarn test
  publish:
    runs-on: ubuntu-latest
    needs: run_integration_tests
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
    # TODO: upload map.js & reduce.js
